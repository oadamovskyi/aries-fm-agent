import type { DependencyManager } from '../../plugins';
import type { Query } from '../../storage/StorageService';
import type { GenericRecord, SaveGenericRecordOption } from './repository/GenericRecord';
import { AgentConfig } from '../../agent/AgentConfig';
import { GenericRecordService } from './service/GenericRecordService';
export declare type ContentType = {
    content: string;
};
export declare class GenericRecordsModule {
    private genericRecordsService;
    private logger;
    constructor(agentConfig: AgentConfig, genericRecordsService: GenericRecordService);
    save({ content, tags, id }: SaveGenericRecordOption): Promise<GenericRecord>;
    delete(record: GenericRecord): Promise<void>;
    deleteById(id: string): Promise<void>;
    update(record: GenericRecord): Promise<void>;
    findById(id: string): Promise<GenericRecord | null>;
    findAllByQuery(query: Query<GenericRecord>): Promise<GenericRecord[]>;
    getAll(): Promise<GenericRecord[]>;
    /**
     * Registers the dependencies of the generic records module on the dependency manager.
     */
    static register(dependencyManager: DependencyManager): void;
}
